def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.teachernavigator.teachernavigator"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 4
        versionName "1.0.3"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release;
        debug;
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }

        all {
            resValue "string", "client_id", keystoreProperties['ClientId']
            resValue "string", "client_secret", keystoreProperties['ClientSecret']
            resValue "string", "grant_type", keystoreProperties['GrantType']
        }
    }
}

dependencies {
    //Support
    compile "com.android.support:appcompat-v7:$supportLibrary"
    compile "com.android.support:support-v4:$supportLibrary"
    compile "com.android.support:recyclerview-v7:$supportLibrary"
    compile "com.android.support:design:$supportLibrary"
    compile "com.android.support:cardview-v7:$supportLibrary"
    compile "com.android.support.constraint:constraint-layout:$constratintLayout"
    compile "com.android.support:support-vector-drawable:$supportLibrary"
    compile "com.android.support:multidex:$multidexVersion"

    //GoogleService
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    compile "com.google.firebase:firebase-messaging:$firebaseVersion"
    compile "com.google.android.gms:play-services-auth:$firebaseVersion"

    //Arch
    compile "android.arch.lifecycle:runtime:$androidArh"
    compile "android.arch.lifecycle:extensions:$androidArh"
    // compile "android.arch.persistence.room:runtime:$androidArh"

    //Dagger2
    compile "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //RxJava2
    compile "io.reactivex.rxjava2:rxjava:$rxJava"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroid"

    //Networking
    compile "com.squareup.okhttp3:okhttp:$okhttp"
    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    compile "com.squareup.retrofit2:converter-scalars:$retrofit"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp"

    //Utils
    compile "com.squareup.picasso:picasso:$picasso"
    compile "ru.terrakok.cicerone:cicerone:$cicerone"
    compile "com.orhanobut:hawk:$hawk"
    compile "de.hdodenhof:circleimageview:$circleView"
    compile "com.github.greenfrvr:hashtag-view:$hashtagView"
    compile "com.github.lliepmah:library:$universalAdapterVersion"
    kapt "com.github.lliepmah:compiler:$universalAdapterVersion"
    compile "com.github.miguelbcr:RxPaparazzo:$rxPaparazzoVersion"
    compile "com.tbruyelle.rxpermissions2:rxpermissions:$rxPermissions@aar"
    compile 'com.redmadrobot:inputmask:2.3.0'
    compile "com.github.markomilos:paginate:$paginateVersion"

    compile "com.afollestad.material-dialogs:core:$materialDialogsVersion"

    /* Social */
    compile "com.facebook.android:facebook-android-sdk:$facebookSdkVersion"
    compile "com.twitter.sdk.android:twitter-core:$twiterVersion"
    compile "com.vk:androidsdk:$androidsdkVersion"

    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }

    compile 'com.neovisionaries:nv-websocket-client:2.3'

    //Crash Reporting

//    compile "com.google.firebase:firebase-crash:$firebaseCrash"
}

repositories {
    mavenCentral()
}

apply from: '../signing/signing.gradle'
apply plugin: 'com.google.gms.google-services'